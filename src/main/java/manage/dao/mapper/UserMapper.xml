<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="manage.dao.UserMapper">
	<resultMap id="BaseResultMap" type="manage.model.User">
		<id column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="authority" property="authority" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="depNumber" property="depNumber" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		account, password, authority, username,depNumber
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where account = #{account,jdbcType=VARCHAR}
		
	</select>
	
	<select id="selectBydepNumber" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user 
		where depNumber = #{depNumber,jdbcType=VARCHAR} 
	</select>

	<!-- 多表关联 -->
	<select id="selectAllListPage" resultMap="PoResult"
		parameterType="java.lang.String">
		select
		u.account, u.password, u.authority, u.username, u.depNumber , d.number , d.name
		, d.manager , d.telephone
		from user u LEFT JOIN departments d ON u.depNumber = d.number
		<where>
			<if test="depNumber != null">
				 u.depNumber = #{depNumber,jdbcType=VARCHAR}
			</if>
			<if test="account != null">
				and u.account = #{account,jdbcType=VARCHAR}
			</if>
			<if test="username != null">
				and u.username like  '${username}%' 
			</if>
		</where>
		order by u.account
	</select>

	<resultMap type="manage.model.UserPo" id="PoResult">
		<id column="account" property="account" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="authority" property="authority" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="depNumber" property="depNumber" jdbcType="VARCHAR" />
		<collection property="departments" javaType="manage.model.Departments"
			ofType="manage.model.Departments">
			<id column="number" property="number" jdbcType="VARCHAR" />
			<result column="name" property="name" jdbcType="VARCHAR" />
			<result column="manager" property="manager" jdbcType="VARCHAR" />
			<result column="telephone" property="telephone" jdbcType="VARCHAR" />
		</collection>
	</resultMap>

	<!-- <select id="getDepatrments" resultType="manage.model.Departments"> 
		column="number" select="getDepatrments" from user order by account select 
		number, name, manager, telephone from departments where number = depNumber 
		</select> -->

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from user
		where account = #{account,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteList" parameterType="java.lang.String">
		delete from user
		where account in
		 <foreach item="user" collection="array" open="(" separator="," close=")">
            #{user}
        </foreach>
	</delete>
	<insert id="insert" parameterType="manage.model.User">
		insert into user (account, password, authority, username,depNumber
		)
		values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
		#{authority,jdbcType=INTEGER},
		#{username,jdbcType=VARCHAR},#{depNumber,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="manage.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="username != null">
				account,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="authority != null">
				authority,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="depNumber != null">
				depNumber,
			</if>

		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="authority != null">
				#{authority,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="depNumber != null">
				#{depNumber,jdbcType=VARCHAR},
			</if>

		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="manage.model.User">
		update user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="authority != null">
				authority = #{authority,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="depNumber != null">
				depNumber = #{depNumber,jdbcType=VARCHAR},
			</if>
		</set>
		where account = #{account,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="manage.model.User">
		update user
		set password = #{password,jdbcType=VARCHAR},
		authority = #{authority,jdbcType=INTEGER},
		username = #{username,jdbcType=VARCHAR},
		depNumber = #{depNumber,jdbcType=VARCHAR}
		where account = #{account,jdbcType=VARCHAR}
	</update>

</mapper>